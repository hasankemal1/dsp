cmake_minimum_required(VERSION 3.10)

# Project settings
project(dsp LANGUAGES CXX)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
# Add compile options
if(MSVC)
    add_compile_options(/W4)
else()
    add_compile_options(-Wall -Wextra)
endif()
set(VCPKG_TARGET_TRIPLET x64-windows-static)
set(CMAKE_PREFIX_PATH "C:/src/vcpkg/installed/x64-windows-static")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)



# Build options
set(BUILD_SHARED_LIBS OFF CACHE BOOL "Build libraries as static" FORCE)
 	
	
	find_package(SFML COMPONENTS Network Graphics Window Audio System CONFIG REQUIRED) 
 	find_package(imgui CONFIG REQUIRED)
	find_package(ImGui-SFML CONFIG REQUIRED)
  	find_package(implot CONFIG REQUIRED)
	


set(SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
file(GLOB_RECURSE MY_SOURCES CONFIGURE_DEPENDS ${SRC_DIR}/*.cpp)



# Main executable
add_executable(${CMAKE_PROJECT_NAME} ${MY_SOURCES})



# Include directories
target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC 
  ${INCLUDE_DIR}
  
)

# Compile definitions
target_compile_definitions(${CMAKE_PROJECT_NAME} PUBLIC 
    RESOURCES_PATH=\"${CMAKE_SOURCE_DIR}/resources/\"
      
)

# Compile features
target_compile_features(${CMAKE_PROJECT_NAME} PRIVATE cxx_std_17)



# Link libraries
target_link_libraries(${CMAKE_PROJECT_NAME} 
    PRIVATE
     	
     	SFML::Network 
	SFML::Graphics 
	SFML::Window 
	SFML::Audio 
	SFML::System
	imgui::imgui
	ImGui-SFML::ImGui-SFML
	implot::implot
       
        
)



# Installation configuration
include(GNUInstallDirs)
set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE PATH "Installation directory")

# Install rules
install(TARGETS ${CMAKE_PROJECT_NAME}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})